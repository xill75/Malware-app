// Carrega a lista de malwares ao carregar a página
document.addEventListener('DOMContentLoaded', loadMalwares);

searchMalware.addEventListener('input', loadMalwares);

// Ativa o modo escuro/claro ao clicar no botão "Modo Escuro"
document.addEventListener('DOMContentLoaded', () => {
    const toggleDarkModeButton = document.getElementById('toggleDarkMode');

    // Alterna entre modo escuro e claro
    toggleDarkModeButton.addEventListener('click', () => {
        document.body.classList.toggle('dark-mode'); // Aplica a classe 'dark-mode' ao body
        toggleDarkModeButton.textContent = 
            document.body.classList.contains('dark-mode') ? 'Modo Claro' : 'Modo Escuro';
    });
});

const malwareForm = document.getElementById('malwareForm');
const malwareList = document.getElementById('malwareList');
const malwareCount = document.getElementById('malwareCount'); // Contador de malwares

//Adicionar Malware
malwareForm.addEventListener('submit', async (e) => {
    e.preventDefault(); // Previne o comportamento padrão de recarregar a página
    const name = document.getElementById('name').value;
    const description = document.getElementById('description').value;

    // Requisicao post
    await fetch('http://localhost:3000/api/malware', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
    });
    
    // Reseta o formulário após o envio e recarrega a lista de malwares
    malwareForm.reset();
    loadMalwares();
});

// Lista de malwares
async function loadMalwares() {
    // Requisição GET
    const response = await fetch('http://localhost:3000/api/malware');
    let malwares = await response.json();
    malwareList.innerHTML = '';

    // Filtra os malwares com base na perquisa
    const pesquisa = searchMalware.value.toLowerCase();
    malwares = malwares.filter(malware => 
        malware.m_name.toLowerCase().includes(pesquisa)
    );

    // Ordena a lista por ordem alfabetica
    malwares.sort((a, b) => a.m_name.localeCompare(b.m_name));

    // Atualiza o contador de malwares
    malwareCount.textContent = malwares.length;

    // Adiciona cada malware na lista com opções de excluir e atualizar
    malwares.forEach(malware => {
        const item = document.createElement('li');
        item.className = 'malware-item';
        item.innerHTML = `
            <strong>${malware.m_name}</strong><br>
            ${malware.m_description}<br>
            <button onclick="deleteMalware(${malware.id})">Excluir</button>
            <button onclick="promptUpdateMalware(${malware.id}, '${malware.m_name}', '${malware.m_description}')">Atualizar</button>
        `;
        malwareList.appendChild(item);
    });
}


// Função para excluir um malware com confirmação
async function deleteMalware(id) {
    const confirmDelete = confirm("Você tem certeza que quer excluir este malware?");
    if (confirmDelete) {
        // Requisição delete
        await fetch(`http://localhost:3000/api/malware/${id}`, { method: 'DELETE' });
        loadMalwares();
    }
}


// Função que exibe prompts para atualizar o nome e a descrição do malware
function promptUpdateMalware(id, currentName, currentDescription) {
    // Exibe prompts para o usuário atualizar o nome e a descrição do malware
    const name = prompt("Atualize o nome do malware:", currentName);
    const description = prompt("Atualize a descrição do malware:", currentDescription);

    // Se ambos os campos forem preenchidos, chama a função para atualizar o malware
    if (name && description) {
        updateMalware(id, name, description);
    }else{
        alert("Preencha todos os campos");
    }
}

// Função para atualizar as informações de um malware
async function updateMalware(id, name, description) {
    // Requisicao put
    await fetch(`http://localhost:3000/api/malware/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ name, description })
    });
    loadMalwares();
}

// Função para redirecionar para a página de login
function paginalogin() {
    window.location.href = 'pages/login.html';
}

// Função para redirecionar para a página de contato
function paginacontato(){
    window.location.href = 'pages/contato.html';
}

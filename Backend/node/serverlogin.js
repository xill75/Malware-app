const express = require('express');
const bodyParser = require('body-parser');
const bcrypt = require('bcrypt');
const mysql = require('mysql2');

const app = express();
const PORT = 3000;

// Configuração do middleware
app.use(bodyParser.json());

// Configuração do banco de dados
const db = mysql.createConnection({
    host: 'localhost',
    user: 'toor',
    password: 'root',
    database: 'malware_site'
});

// Conexão com o banco de dados
db.connect((err) => {
    if (err) throw err;
    console.log('Conectado ao banco de dados MySQL!');
});

// Rota para registro de usuários
app.post('/api/register', async (req, res) => {
    const { email, senha } = req.body;

    // Gera o hash da senha
    const senhaHash = await bcrypt.hash(senha, 10); // 10 é o número de rounds

    const query = 'INSERT INTO usuarios (email, senhaHash) VALUES (?, ?)';
    db.query(query, [email, senhaHash], (err, results) => {
        if (err) {
            return res.status(500).json({ message: 'Erro ao registrar usuário.' });
        }
        res.status(201).json({ message: 'Usuário registrado com sucesso' });
    });
});

// Rota de login
app.post('/api/login', async (req, res) => {
    const { email, senha } = req.body;

    const query = 'SELECT * FROM usuarios WHERE email = ?';
    db.query(query, [email], async (err, results) => {
        if (err || results.length === 0) {
            return res.status(401).json({ message: 'Usuário não encontrado' });
        }

        const usuario = results[0];

        // Verifica a senha
        const senhaValida = await bcrypt.compare(senha, usuario.senhaHash);
        if (senhaValida) {
            res.status(200).json({ message: 'Login bem-sucedido' });
        } else {
            res.status(401).json({ message: 'Senha incorreta' });
        }
    });
});

app.listen(PORT, () => {
    console.log(`Servidor rodando em http://localhost:${PORT}`);
});

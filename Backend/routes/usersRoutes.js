const express = require('express');
const router = express.Router();
const db = require('../database/db.js');
const bcrypt = require('bcryptjs');

// Rota para registrar um usuário
router.post('/register', (req, res) => {
    const { email, password } = req.body;

    // Verificar se o e-mail já existe
    db.query('SELECT * FROM users WHERE email = ?', [email], (err, results) => {
        if (err) return res.status(500);
        if (results.length > 0) {
            return res.status(409).send({ message: 'E-mail já está em uso.' });
        }

        // Se o e-mail não existir, prosseguir para criar o usuário
        db.query('INSERT INTO users (email, password) VALUES (?, ?)', [email, password], (err, result) => {
            if (err) return res.status(500);
            res.status(201).send({ id: result.insertId, email });
        });
    });
});

// Rota para login
router.post('/login', (req, res) => {
    const { email, password } = req.body;
    db.query('SELECT * FROM users WHERE email = ?', [email], (err, results) => {
        if (err) return res.status(500);
        if (results.length > 0) {
            const user = results[0];
            // Verifica a senha
            bcrypt.compare(password, user.password, (err, match) => {
                if (err) return res.status(500);
                if (match) {
                    return res.send({ message: 'Login bem-sucedido' });
                } else {
                    return res.status(401).send({ message: 'Credenciais inválidas' });
                }
            });
        } else {
            return res.status(404).send({ message: 'Email não encontrado' });
        }
    });
});

module.exports = router;